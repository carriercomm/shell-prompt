#!/usr/bin/env perl
use strict;
use warnings;
use File::Basename; # TODO eliminate this dep somehow

# Add this to your zshrc:
# precmd () {
#     PROMPT=`shell-prompt`
# }

# Add this to your bashrc:
# PS1='$(shell-prompt)'

$| = 1;

my $user = $ENV{USER};
(my $home = $ENV{HOME}) =~ s{/*?$}{}; # in case of trailing slash
(my $pwd = $ENV{PWD}) =~ s{^$home(/|$)}{~$1};
chomp(my $host = `hostname -s`);
chomp(my $cols = `tput cols`);

sub in_darcs_repo {
    my $pwd = $ENV{PWD};

    while ($pwd ne dirname $pwd) {
        return 0 if -l $pwd;
        return 1 if -d "$pwd/_darcs";
        $pwd = dirname $pwd;
    }

    return 0;
}

sub in_git_repo {
    my $pwd = $ENV{PWD};

    while ($pwd ne dirname $pwd) {
        return 0 if basename($pwd) eq '.git';
        return 0 if -l $pwd;
        return 1 if -d "$pwd/.git";
        $pwd = dirname $pwd;
    }

    return 0;
}

# VCS info
my $vcs;
if (in_darcs_repo) {
    $vcs = 'd';
    $vcs .= '*' if `darcs whatsnew` !~ /^No changes/;
}
elsif (in_git_repo) {
    $vcs = 'g';
    my $status = `git status`;
    $vcs .= '*' if $status !~ /nothing to commit/;
    $vcs .= ":$1" if $status =~ /On branch (.*)/;
    $vcs =~ s/\*:/*/;
}

my ($lhs_length, $rhs_length);
sub calc_length {
    $lhs_length = 2 + length($pwd);
    $lhs_length += 3 + length($vcs) if $vcs;
    $rhs_length = 4 + length($user) + length($host);
    $lhs_length + $rhs_length;
}

# Collapse long directory names into one letter abbreviations from the top down
while (calc_length > $cols) {
    $pwd =~ s{/([^/])[^/]+/}{/$1/}
        or last;
}

# pwd
print "\e[1;30m(\e[33m$pwd\e[30m)";

# vcs
print "-(\e[0;36m$vcs\e[1;30m)" if $vcs;

# dashes
print ('-' x ($cols - ($lhs_length + $rhs_length)));

# user@host
print "\e[1;30m(\e[0;32m$user\@$host\e[1;30m)-";

# newline and $
print "\e[m\n\$ ";

